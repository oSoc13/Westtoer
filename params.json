{"name":"Westtoer","tagline":"Web framework for Westtoer to retrieve and serve data from the datahub.","body":"# Westtoer\r\n---\r\n\r\nWeb framework for Westtoer to retrieve, filter and serve data from the datahub.\r\n\r\n## Features\r\n* **Data fetcher**: Retrieves and caches data from the datahub.\r\n* **Dashboard**: Control panel for users with screen(s) to customize their screens.\r\n* **REST service**: Data source for the screen(s). Formats data from cache/data fetcher for screen(s) based on settings from dashboard. Compatible with [FlatTurtle](http://flatturtle.com)\r\n\r\n\r\n\r\n\r\n## Developed and tested on\r\n\r\n * Apache\r\n * PHP 5.3.x with APC (caching)\r\n * MySQL\r\n\r\n## Installation\r\n### Prerequisites\r\n\r\nThis project uses Laravel 4 as base framework.\r\nAll dependencies are defined in ```composer.json``` can be installed using [composer](http://getcomposer.org/).\r\nInstall composer and run the ```composer install``` command in this project dir to fetch all libraries.\r\n\r\n1. Install composer, see <http://getcomposer.org/> for more information.\r\n2. Download the contents of this repo or clone it.\r\n3. In the project folder run composer with the parameter ```install```, this will read the ```composer.json``` from the current directory and install all required libraries in the subdirectory ```vendor```.\r\n\r\n```Shell\r\n\tcomposer install\r\n```\r\n### Configuration\r\n\r\nLaravel supports multiple environments for configuration. The base configuration files can be found in ```app/config```.\r\n\r\n### Single configuration (one environment)\r\n\r\nIf you just want to configure this framework for one (production) server, just edit the files in ```app/config```.\r\n\r\n\r\n\r\n#### /app/config/database.php\r\n\r\nAdjust the ```connections``` array with the database server details.\r\n##### example\r\n```PHP\r\n\t'connections' => array(\r\n\r\n\t\t'mysql' => array(\r\n\t\t\t'driver'    => 'mysql',\r\n\t\t\t'host'      => 'localhost',\r\n\t\t\t'database'  => 'database_name',\r\n\t\t\t'username'  => 'database_username',\r\n\t\t\t'password'  => 'user_password',\r\n\t\t\t'charset'   => 'utf8',\r\n\t\t\t'collation' => 'utf8_unicode_ci',\r\n\t\t\t'prefix'    => 'prefix_',\r\n\t\t)\r\n\r\n\t),\r\n```\r\n\r\n#### /app/config/cache.php\r\n\r\nAdjust the ```driver``` value to select the desired caching method.\r\n\r\n**Note** ```file``` does not support caching in sections and cannot be used.\r\n\r\n##### example\r\n```PHP\r\n'driver' => 'apc',\r\n```\r\n\r\n\r\n#### /app/config/hub.php\r\n\r\nAdd details for the datahub to fetch the data from.\r\n\r\n* ```base_url``` : uri of the datahub\r\n* ```resource``` : resource file \r\n* ```user``` : username to connect to the datahub\r\n* ```password```: password to connect to the datahub\r\n* ```interval```: amount of days in future that should be fetched.\r\n* ```lat_min```: min latitude of geo area to retrieve items from.\r\n* ```lat_max```: max latitude of geo area to retrieve items from.\r\n* ```lon_min```: min longitude of geo area to retrieve items from.\r\n* ```lon_max```: max longitude of geo area to retrieve items from.\r\n* ```limit```: standard limit of items (triplets) to be fetched.\r\n* ```cache_ttl```: time to live for cached data fetched from the datahub.\r\n\r\n\r\n##### example\r\n\r\n```PHP\r\nreturn array(\r\n\t'base_url' => 'https://datahub.westtoer.be/',\r\n\t'resource' => 'query/events.json',\r\n\t'user' => 'username',\r\n\t'password' => 'password',\r\n\t'interval' => 30,\r\n\t'lat_min' => 50,\r\n\t'lat_max' => 54,\r\n\t'lon_min' => 2,\r\n\t'lon_max' => 4,\r\n\t'limit' => 500,\r\n\t'cache_ttl' => 60*60\r\n);\r\n```\r\n\r\n\r\n#### /app/config/weather.php\r\n\r\nCache time and api key can be set here. Retrieve api key from Weather Underground\r\n\r\n* ```api_key```: api key for access to Weather Underground.\r\n* ```cache_ttl```: time to live for cached data fetched from the weather api.\r\n\r\n##### example\r\n```PHP\r\nreturn array(\r\n\t'api_key' => 'api_key',\r\n\t'cache_ttl' => 60*60\r\n);\r\n```\r\n\r\n### Multiple environments\r\n\r\nIf you want to use multiple environments (for example: a development environment and a production environment with separate caching and databases). Copy the files to a new subdirectory in the ```/app/config``` folder and configure them there, for example in ```/app/config/development``` and in ```/app/config/production```.\r\n\r\nThen configure the detection of the development environment in ```bootstrap/start.php```.\r\n\r\n```PHP\r\n$env = $app->detectEnvironment(array(\r\n    'development' => array('*.dev', 'localhost'),\r\n    'production' => array('dashboard.westtoer.be'),\r\n\r\n));\r\n```\r\n\r\n### Database migration\r\n\r\nTo create the necessary tables for this framework, ```artisan``` can be used.\r\n\r\nIn the project root, run:\r\n\r\n```Shell\r\nphp artisan migrate:refresh\r\n```\r\n\r\nIf you are using multiple environments, add the corresponding environment with the ```--env``` switch\r\n\r\n```Shell\r\nphp artisan --env=development migrate:refresh\r\n```\r\n\r\n### Database seeding\r\n\r\nTo add demo information to the database, run ```artisan``` with the ```db:seed``` option\r\n\r\n```Shell\r\nphp artisan db:seed\r\n```\r\n\r\nor with multiple environments, use the ```--env``` switch\r\n\r\n```Shell\r\nphp artisan --env=development db:seed\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}